================================================================================
map - BLOCK form
================================================================================
map { +"\L$_"  => 1 } @array;      # perl guesses BLOCK. right
map { ; "\L$_" => 1 } @array;      # this also works
map { ( "\L$_" => 1 ) } @array;    # as does this
map { lc($_) => 1 } @array;        # and this.
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (map_grep_expression
      (block
        (expression_statement
          (list_expression
            (unary_expression
              (interpolated_string_literal
                (escape_sequence)
                (scalar)))
            (number))))
      (array)))
  (comment)
  (expression_statement
    (map_grep_expression
      (block
        (expression_statement
          (list_expression
            (interpolated_string_literal
              (escape_sequence)
              (scalar))
            (number))))
      (array)))
  (comment)
  (expression_statement
    (map_grep_expression
      (block
        (expression_statement
          (list_expression
            (interpolated_string_literal
              (escape_sequence)
              (scalar))
            (number))))
      (array)))
  (comment)
  (expression_statement
    (map_grep_expression
      (block
        (expression_statement
          (list_expression
            (func1op_call_expression
              (scalar))
            (number))))
      (array)))
  (comment))

================================================================================
map - EXPR form
================================================================================
map +( lc($_) => 1 ), @array;      # this is EXPR and works!
map +{ lc($_) => 1 }, @array;      # EXPR, so needs comma at end
map { "\L$_"   => 1 }, @array;     # perl guesses EXPR; SURPRISE!
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (map_grep_expression
      (unary_expression
        (list_expression
          (func1op_call_expression
            (scalar))
          (number)))
      (array)))
  (comment)
  (expression_statement
    (map_grep_expression
      (unary_expression
        (anonymous_hash_expression
          (list_expression
            (func1op_call_expression
              (scalar))
            (number))))
      (array)))
  (comment)
  (expression_statement
    (map_grep_expression
      (anonymous_hash_expression
        (list_expression
          (func1op_call_expression
            (scalar))
          (number)))
      (array))
  (comment))

================================================================================
map - goshdarn parens
================================================================================
%hash = map ( lc($_), 1 ), @array;         # evaluates to (1, @array)
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (assignment_expression
      (hash)
      (map_grep_expression
        (func1op_call_expression
          (scalar))
          (number))
        (array)))
  (comment))
